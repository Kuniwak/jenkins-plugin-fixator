#!/bin/bash -eu
set -o pipefail


function run_test() {
  local BASE_PATH="$(cd "$(dirname "$0")/.."; pwd)"
  local WORKSPACE="/tmp/jenkins-plugin-fixator-test"

  local BASE_COMMAND="$BASE_PATH/bin/jenkins-plugin-fixator"
  local RESULT_DIR="$WORKSPACE/result"
  local RESULT_STDOUT="$RESULT_DIR/$(basename "$0").stdout"
  local RESULT_STDERR="$RESULT_DIR/$(basename "$0").stderr"

  mkdir -p "$RESULT_DIR"
  echo > "$RESULT_STDOUT"
  echo > "$RESULT_STDERR"

  local JENKINS_PORT='3001'
  local ENDPOINT="http://localhost:$JENKINS_PORT"
  local PROJECT_STUB="$WORKSPACE/$(basename "$0")/project_stub"

  source "$BASE_PATH/test/helper.bash"


  (mkdir -p "$PROJECT_STUB" && cd "$PROJECT_STUB"

    # "greenballs" is a very small isolated plugin.
    # And 1.10 is an old version.
    echo "greenballs  Green Balls  1.10" > './JenkinsPlugins.lock'

    ENDPOINT="$ENDPOINT" "$BASE_COMMAND" "install" \
      >> "$RESULT_STDOUT" 2>> "$RESULT_STDERR" \
      && ok "$LINENO" || ng "$LINENO"

    ENDPOINT="$ENDPOINT" "$BASE_COMMAND" "upgrade" \
      >> "$RESULT_STDOUT" 2>> "$RESULT_STDERR" \
      && ok "$LINENO" || ng "$LINENO"

    # Expect "greenballs" to be upgraded from 1.10.
    grep --invert-match '1.10' './JenkinsPlugins.lock' > /dev/null \
      && ok "$LINENO" || ng "$LINENO"
  )
}


run_test
